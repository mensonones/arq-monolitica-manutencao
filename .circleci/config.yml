version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    
    working_directory: ~/circleci-demo-java # directory where steps will run

    docker: # run the steps with Docker
      - image: circleci/openjdk:8-jdk-browsers # ...with this image as the primary container; this is where all `steps` will run

    steps: # a collection of executable commands

      - checkout # check out source code to working directory

      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          key: circleci-demo-java-{{ checksum "pom.xml" }}
      
      - run: mvn dependency:go-offline # gets the project dependencies
      - run: mvn integration-test  
      - run: mvn checkstyle:checkstyle
      - run: mvn findbugs:findbugs
      
      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: circleci-demo-java-{{ checksum "pom.xml" }}
      
      
      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard. 
          path: target/surefire-reports
      
      - store_artifacts: # store the uberjar as an artifact
          path: target/monolitica.war
          path: target/checkstyle-result.xml
          path: target/findbugsXml.xml
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples    
